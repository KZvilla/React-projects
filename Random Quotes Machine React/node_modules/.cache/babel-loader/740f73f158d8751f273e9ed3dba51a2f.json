{"ast":null,"code":"var _jsxFileName = \"C:\\\\vs workspace\\\\React\\\\random-quotes-generator\\\\src\\\\components\\\\rmnquotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function QuoteCard() {\n  _s();\n\n  const [quote, setQuote] = useState({});\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loadingQuote, setLoadingQuote] = useState(false);\n  const [quoteCopied, setQuoteCopied] = useState(false);\n  useEffect(() => {\n    fetchRandomQuote();\n  }, []);\n\n  async function fetchRandomQuote() {\n    try {\n      setLoadingQuote(true);\n      setErrorMessage(\"\");\n      setQuoteCopied(false);\n      const quoteObject = await axios.get(\"https://api.quotable.io/random\");\n      setQuote(quoteObject.data);\n      setLoadingQuote(false);\n    } catch (error) {\n      setErrorMessage(error.message);\n      setLoadingQuote(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    id: \"tweet-quote\",\n    onClick: fetchRandomQuote\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 2\n  }, this);\n}\n\n_s(QuoteCard, \"DQ4keWas/BjpNwV6BJvc5sT84IY=\");\n\n_c = QuoteCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteCard\");","map":{"version":3,"sources":["C:/vs workspace/React/random-quotes-generator/src/components/rmnquotes.js"],"names":["React","useEffect","useState","axios","QuoteCard","quote","setQuote","errorMessage","setErrorMessage","loadingQuote","setLoadingQuote","quoteCopied","setQuoteCopied","fetchRandomQuote","quoteObject","get","data","error","message"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAElC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,gBAAf,GAAkC;AAChC,QAAI;AACFH,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAF,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAI,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA,YAAME,WAAW,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,gCAAV,CAA1B;AACAT,MAAAA,QAAQ,CAACQ,WAAW,CAACE,IAAb,CAAR;AACAN,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KAPD,CAOE,OAAOO,KAAP,EAAc;AACdT,MAAAA,eAAe,CAACS,KAAK,CAACC,OAAP,CAAf;AACAR,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF;;AAED,sBACD;AAAG,IAAA,EAAE,EAAC,aAAN;AAAoB,IAAA,OAAO,EAAEG;AAA7B;AAAA;AAAA;AAAA;AAAA,UADC;AAKD;;GA9BuBT,S;;KAAAA,S","sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function QuoteCard() {\r\n\r\n  const [quote, setQuote] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loadingQuote, setLoadingQuote] = useState(false);\r\n  const [quoteCopied, setQuoteCopied] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchRandomQuote();\r\n  }, []);\r\n\r\n  async function fetchRandomQuote() {\r\n    try {\r\n      setLoadingQuote(true);\r\n      setErrorMessage(\"\");\r\n      setQuoteCopied(false);\r\n      const quoteObject = await axios.get(\"https://api.quotable.io/random\");\r\n      setQuote(quoteObject.data);\r\n      setLoadingQuote(false);\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n      setLoadingQuote(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n\t<a id=\"tweet-quote\" onClick={fetchRandomQuote}>\r\n\r\n  </a> \r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}