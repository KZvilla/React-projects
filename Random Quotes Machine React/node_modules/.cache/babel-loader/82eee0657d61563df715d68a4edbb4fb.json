{"ast":null,"code":"var _jsxFileName = \"C:\\\\vs workspace\\\\React\\\\random-quotes-generator\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './colorList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quotesJson = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nfunction App() {\n  _s();\n\n  const [quote, setQuote] = useState('ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum ');\n  const [author, setAuthor] = useState('Yo jimbo');\n  const [ramdonNumber, setRamdonNumber] = useState(0);\n  const [quotesList, setQuotesList] = useState(null);\n  const [color, setColor] = useState('#77ecca');\n\n  const fetchQuotes = async url => {\n    const response = await fetch(url);\n    const parsedList = await response.json();\n    setQuotesList(parsedList.quotes);\n  };\n\n  useEffect(() => {\n    fetchQuotes(quotesJson);\n  });\n\n  const generateRandomQuote = () => {\n    let rng = Math.round(quotesList.length * Math.random());\n    setRamdonNumber(rng);\n    setQuote(quotesList[rng].quote);\n    setAuthor(quotesList[rng].author);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      className: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"text\",\n        className: \"quote-box__text\",\n        children: [\"\\\"\", quote, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"author\",\n        className: \"quote-box__author\",\n        children: [\"- \", author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        className: \"quote-box__new-quote\",\n        onClick: () => generateRandomQuote(),\n        children: \"Generate Number Random\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"tweet-quote\",\n        className: \"quote-box__tweet-quote\",\n        rel: \"noreferrer\",\n        href: encodeURI(`http://www.twitter.com/intent/tweet?text=${quote}\\n- ${author}`),\n        target: \"_blank\",\n        children: \"Tweet Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5XDI+f51klrEJXxUUuPmkHmX+5o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/vs workspace/React/random-quotes-generator/src/App.js"],"names":["React","useEffect","useState","quotesJson","App","quote","setQuote","author","setAuthor","ramdonNumber","setRamdonNumber","quotesList","setQuotesList","color","setColor","fetchQuotes","url","response","fetch","parsedList","json","quotes","generateRandomQuote","rng","Math","round","length","random","encodeURI"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,OAAO,aAAP;;AAEA,MAAMC,UAAU,GAAG,wIAAnB;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,4OAAD,CAAlC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,UAAD,CAApC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,SAAD,CAAlC;;AACA,QAAMa,WAAW,GAAG,MAAOC,GAAP,IAAe;AAC/B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,UAAU,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAzB;AACAR,IAAAA,aAAa,CAACO,UAAU,CAACE,MAAZ,CAAb;AACH,GAJD;;AAKApB,EAAAA,SAAS,CAAC,MAAM;AACRc,IAAAA,WAAW,CAACZ,UAAD,CAAX;AACP,GAFQ,CAAT;;AAKA,QAAMmB,mBAAmB,GAAG,MAAM;AAC9B,QAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWd,UAAU,CAACe,MAAX,GAAkBF,IAAI,CAACG,MAAL,EAA7B,CAAV;AACCjB,IAAAA,eAAe,CAACa,GAAD,CAAf;AACAjB,IAAAA,QAAQ,CAACK,UAAU,CAACY,GAAD,CAAV,CAAgBlB,KAAjB,CAAR;AACAG,IAAAA,SAAS,CAACG,UAAU,CAACY,GAAD,CAAV,CAAgBhB,MAAjB,CAAT;AACJ,GALD;;AAOF,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAoB,MAAA,SAAS,EAAC,WAA9B;AAAA,8BACI;AAAG,QAAA,EAAE,EAAC,MAAN;AAAa,QAAA,SAAS,EAAC,iBAAvB;AAAA,yBACMF,KADN;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAG,QAAA,EAAE,EAAC,QAAN;AAAe,QAAA,SAAS,EAAC,mBAAzB;AAAA,yBACOE,MADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,SAAS,EAAC,sBAAjC;AAAwD,QAAA,OAAO,EAAE,MAAIe,mBAAmB,EAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAG,QAAA,EAAE,EAAC,aAAN;AAAoB,QAAA,SAAS,EAAC,wBAA9B;AAAuD,QAAA,GAAG,EAAC,YAA3D;AACA,QAAA,IAAI,EAAEM,SAAS,CAAE,4CAA2CvB,KAAM,OAAME,MAAO,EAAhE,CADf;AACmF,QAAA,MAAM,EAAE,QAD3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAxCQH,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.scss';\nimport './colorList';\n\nconst quotesJson = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\nfunction App() {\n    const [quote, setQuote] = useState('ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum ');\n    const [author, setAuthor] = useState('Yo jimbo');\n    const [ramdonNumber, setRamdonNumber] = useState(0);\n    const [quotesList, setQuotesList] = useState(null);\n    const [color, setColor] = useState('#77ecca')\n    const fetchQuotes = async (url) => {\n        const response = await fetch(url)\n        const parsedList = await response.json()\n        setQuotesList(parsedList.quotes)\n    }\n    useEffect(() => {\n            fetchQuotes(quotesJson)\n    });\n    \n\n    const generateRandomQuote = () => {\n        let rng = Math.round(quotesList.length*Math.random());\n         setRamdonNumber(rng);\n         setQuote(quotesList[rng].quote)\n         setAuthor(quotesList[rng].author)\n    }\n\n  return (   \n    <div className=\"container\">\n        <div id=\"quote-box\" className='quote-box'>\n            <p id=\"text\" className='quote-box__text'>\n                \"{quote}\"\n            </p>\n            <p id='author' className='quote-box__author'>\n                - {author}\n            </p>\n            <button id='new-quote' className='quote-box__new-quote' onClick={()=>generateRandomQuote()}>Generate Number Random</button>\n            <a id=\"tweet-quote\" className='quote-box__tweet-quote' rel=\"noreferrer\" \n            href={encodeURI(`http://www.twitter.com/intent/tweet?text=${quote}\\n- ${author}`)} target={\"_blank\"}>\n            Tweet Quote\n            </a>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}