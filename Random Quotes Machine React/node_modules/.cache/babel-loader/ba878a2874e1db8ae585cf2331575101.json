{"ast":null,"code":"var _jsxFileName = \"C:\\\\vs workspace\\\\React\\\\random-quotes-generator\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport COLOR_LIST from './colorList';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDoubleRight } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quotesJson = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nfunction App() {\n  _s();\n\n  const [quote, setQuote] = useState('Cogito ergo sum');\n  const [author, setAuthor] = useState('René Descartes');\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quotesList, setQuotesList] = useState(null);\n  const [color, setColor] = useState('#77ecca');\n\n  const fetchQuotes = async url => {\n    const response = await fetch(url);\n    const parsedList = await response.json();\n    setQuotesList(parsedList.quotes);\n  };\n\n  useEffect(() => {\n    fetchQuotes(quotesJson);\n  });\n\n  const generateRandomQuote = () => {\n    let rng = Math.round(quotesList.length * Math.random());\n    setRandomNumber(rng);\n    setColor(COLOR_LIST[rng]);\n    setQuote(quotesList[rng].quote);\n    setAuthor(quotesList[rng].author);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      backgroundColor: color,\n      color: color\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      className: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"text\",\n        className: \"quote-box__text\",\n        style: {\n          color: color\n        },\n        children: [randomNumber, \" : \\\"\", quote, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"author\",\n        className: \"quote-box__author\",\n        style: {\n          color: color\n        },\n        children: [\"- \", author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        className: \"quote-box__new-quote\",\n        onClick: () => generateRandomQuote(),\n        style: {\n          backgroundColor: color\n        },\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faAngleDoubleRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 46\n        }, this), \"New Quote\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quote-box__tweet-button\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"tweet-quote\",\n          className: \"quote-box__tweet-button__tweet-quote\",\n          rel: \"noreferrer\",\n          href: encodeURI(`http://www.twitter.com/intent/tweet?text=${quote}\\n- ${author}`),\n          target: \"_blank\",\n          style: {\n            backgroundColor: color\n          },\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTwitter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LAi9qFqs320BRlrgaCSdzKqhLss=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/vs workspace/React/random-quotes-generator/src/App.js"],"names":["React","useEffect","useState","COLOR_LIST","FontAwesomeIcon","faAngleDoubleRight","faTwitter","quotesJson","App","quote","setQuote","author","setAuthor","randomNumber","setRandomNumber","quotesList","setQuotesList","color","setColor","fetchQuotes","url","response","fetch","parsedList","json","quotes","generateRandomQuote","rng","Math","round","length","random","backgroundColor","encodeURI"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.scss';\nimport COLOR_LIST from './colorList';\nimport { FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faAngleDoubleRight} from '@fortawesome/free-solid-svg-icons'\nimport {faTwitter} from '@fortawesome/free-brands-svg-icons'\n\nconst quotesJson = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\nfunction App() {\n    const [quote, setQuote] = useState('Cogito ergo sum');\n    const [author, setAuthor] = useState('René Descartes');\n    const [randomNumber, setRandomNumber] = useState(0);\n    const [quotesList, setQuotesList] = useState(null);\n    const [color, setColor] = useState('#77ecca');\n    const fetchQuotes = async (url) => {\n        const response = await fetch(url)\n        const parsedList = await response.json()\n        setQuotesList(parsedList.quotes)\n    }\n    useEffect(() => {\n            fetchQuotes(quotesJson)\n    });\n    \n\n    const generateRandomQuote = () => {\n        let rng = Math.round(quotesList.length*Math.random());\n         setRandomNumber(rng);\n         setColor(COLOR_LIST[rng]);\n         setQuote(quotesList[rng].quote)\n         setAuthor(quotesList[rng].author)\n    }\n\n  return (   \n    <div className=\"container\" style={{backgroundColor: color, color: color}}>\n        <div id=\"quote-box\" className='quote-box'>\n            <p id=\"text\" className='quote-box__text' style={{color: color}}>\n                {randomNumber} : \"{quote}\"\n            </p>\n            <p id='author' className='quote-box__author' style={{color: color}}>\n                - {author}\n            </p>\n            <button id='new-quote' className='quote-box__new-quote' onClick={()=>generateRandomQuote()} \n            style={{backgroundColor: color}}><FontAwesomeIcon icon={faAngleDoubleRight}></FontAwesomeIcon>\n            New Quote\n            </button>\n            <div className='quote-box__tweet-button'>\n                <a id=\"tweet-quote\" className='quote-box__tweet-button__tweet-quote' rel=\"noreferrer\" \n                href={encodeURI(`http://www.twitter.com/intent/tweet?text=${quote}\\n- ${author}`)} target={\"_blank\"} \n                style={{backgroundColor: color}}>\n                <FontAwesomeIcon icon={faTwitter}></FontAwesomeIcon>\n                </a>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}